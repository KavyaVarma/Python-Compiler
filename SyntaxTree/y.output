Terminals unused in grammar

   T_FROM
   T_WITH
   T_ELSE
   T_IF
   T_RETURN
   T_DEF
   T_AS
   T_SEMICOLON


Grammar

    0 $accept: P $end

    1 P: all_stmt T_EOF

    2 literal: T_INTEGER
    3        | T_FLOAT
    4        | T_STRING
    5        | T_BOOLEAN
    6        | list_stmt

    7 indexes: T_OPENS T_INTEGER T_CLOSES indexes
    8        | %empty

    9 all_stmt: simple_stmt line all_stmt
   10         | compound_stmt
   11         | %empty

   12 compound_stmt: while_stmt line suite all_stmt
   13              | for_stmt line suite all_stmt

   14 suite: indent all_stmt dedent
   15      | line suite

   16 line: T_NEWLINE

   17 indent: T_INDENT

   18 dedent: T_DEDENT

   19 simple_stmt: print_stmt
   20            | assignment_stmt
   21            | break_stmt
   22            | continue_stmt
   23            | import_stmt
   24            | aug_assignment_stmt
   25            | %empty

   26 print_stmt: T_PRINT T_OPENP print_list T_CLOSEP

   27 print_list: expression_stmt T_COMMA print_list
   28           | expression_stmt

   29 assignment_stmt: T_IDENTIFIER indexes T_EQUAL expression_stmt

   30 list_stmt: T_OPENS item T_CLOSES
   31          | T_OPENS T_CLOSES

   32 item: list_literal T_COMMA item
   33     | list_literal

   34 list_literal: T_INTEGER
   35             | T_FLOAT
   36             | list_stmt

   37 break_stmt: T_BREAK

   38 continue_stmt: T_CONTINUE

   39 import_stmt: T_IMPORT import_list

   40 import_list: T_IDENTIFIER T_COMMA import_list
   41            | T_IDENTIFIER

   42 aug_assignment_stmt: T_IDENTIFIER arith_operator T_EQUAL expression_stmt

   43 logical_exp: condition rel_op logical_exp
   44            | condition

   45 rel_op: T_AND
   46       | T_OR
   47       | T_NOT

   48 arith_operator: T_PLUS
   49               | T_MINUS
   50               | T_STAR
   51               | T_POWER
   52               | T_DIVIDE
   53               | T_MOD

   54 condition: expression_stmt comp_operator condition
   55          | expression_stmt

   56 comp_operator: T_LESSER
   57              | T_GREATER
   58              | T_EQUAL T_EQUAL
   59              | T_GREATER T_EQUAL
   60              | T_LESSER T_EQUAL
   61              | T_NO T_EQUAL

   62 expression_stmt: expression_stmt T_PLUS term
   63                | expression_stmt T_MINUS term
   64                | term

   65 term: term T_STAR factor
   66     | term T_DIVIDE factor
   67     | term T_MOD factor
   68     | factor

   69 factor: power T_POWER factor
   70       | power

   71 power: T_OPENP expression_stmt T_CLOSEP
   72      | literal
   73      | T_IDENTIFIER indexes

   74 while_stmt: T_WHILE logical_exp T_COLON

   75 for_stmt: T_FOR T_IDENTIFIER T_IN range_stmt T_COLON

   76 range_stmt: T_RANGE T_OPENP T_INTEGER T_COMMA T_INTEGER T_CLOSEP
   77           | T_RANGE T_OPENP T_INTEGER T_COMMA T_INTEGER T_COMMA T_INTEGER T_CLOSEP
   78           | T_STRING


Terminals, with rules where they appear

$end (0) 0
error (256)
T_OR (258) 46
T_AND (259) 45
T_BOOLEAN (260) 5
T_INTEGER (261) 2 7 34 76 77
T_IDENTIFIER (262) 29 40 41 42 73 75
T_STRING (263) 4 78
T_FLOAT (264) 3 35
T_FROM (265)
T_NOT (266) 47
T_WHILE (267) 74
T_WITH (268)
T_ELSE (269)
T_IF (270)
T_BREAK (271) 37
T_IN (272) 75
T_CONTINUE (273) 38
T_RETURN (274)
T_DEF (275)
T_FOR (276) 75
T_IMPORT (277) 39
T_AS (278)
T_PRINT (279) 26
T_PLUS (280) 48 62
T_MINUS (281) 49 63
T_POWER (282) 51 69
T_STAR (283) 50 65
T_DIVIDE (284) 52 66
T_MOD (285) 53 67
T_OPENP (286) 26 71 76 77
T_CLOSEP (287) 26 71 76 77
T_OPENS (288) 7 30 31
T_CLOSES (289) 7 30 31
T_EQUAL (290) 29 42 58 59 60 61
T_COMMA (291) 27 32 40 76 77
T_INDENT (292) 17
T_LESSER (293) 56 60
T_GREATER (294) 57 59
T_NO (295) 61
T_NEWLINE (296) 16
T_COLON (297) 74 75
T_RANGE (298) 76 77
T_DEDENT (299) 18
T_EOF (300) 1
T_SEMICOLON (301)


Nonterminals, with rules where they appear

$accept (47)
    on left: 0
P (48)
    on left: 1, on right: 0
literal (49)
    on left: 2 3 4 5 6, on right: 72
indexes (50)
    on left: 7 8, on right: 7 29 73
all_stmt (51)
    on left: 9 10 11, on right: 1 9 12 13 14
compound_stmt (52)
    on left: 12 13, on right: 10
suite (53)
    on left: 14 15, on right: 12 13 15
line (54)
    on left: 16, on right: 9 12 13 15
indent (55)
    on left: 17, on right: 14
dedent (56)
    on left: 18, on right: 14
simple_stmt (57)
    on left: 19 20 21 22 23 24 25, on right: 9
print_stmt (58)
    on left: 26, on right: 19
print_list (59)
    on left: 27 28, on right: 26 27
assignment_stmt (60)
    on left: 29, on right: 20
list_stmt (61)
    on left: 30 31, on right: 6 36
item (62)
    on left: 32 33, on right: 30 32
list_literal (63)
    on left: 34 35 36, on right: 32 33
break_stmt (64)
    on left: 37, on right: 21
continue_stmt (65)
    on left: 38, on right: 22
import_stmt (66)
    on left: 39, on right: 23
import_list (67)
    on left: 40 41, on right: 39 40
aug_assignment_stmt (68)
    on left: 42, on right: 24
logical_exp (69)
    on left: 43 44, on right: 43 74
rel_op (70)
    on left: 45 46 47, on right: 43
arith_operator (71)
    on left: 48 49 50 51 52 53, on right: 42
condition (72)
    on left: 54 55, on right: 43 44 54
comp_operator (73)
    on left: 56 57 58 59 60 61, on right: 54
expression_stmt (74)
    on left: 62 63 64, on right: 27 28 29 42 54 55 62 63 71
term (75)
    on left: 65 66 67 68, on right: 62 63 64 65 66 67
factor (76)
    on left: 69 70, on right: 65 66 67 68 69
power (77)
    on left: 71 72 73, on right: 69 70
while_stmt (78)
    on left: 74, on right: 12
for_stmt (79)
    on left: 75, on right: 13
range_stmt (80)
    on left: 76 77 78, on right: 75


State 0

    0 $accept: . P $end

    T_IDENTIFIER  shift, and go to state 1
    T_WHILE       shift, and go to state 2
    T_BREAK       shift, and go to state 3
    T_CONTINUE    shift, and go to state 4
    T_FOR         shift, and go to state 5
    T_IMPORT      shift, and go to state 6
    T_PRINT       shift, and go to state 7

    T_NEWLINE  reduce using rule 25 (simple_stmt)
    $default   reduce using rule 11 (all_stmt)

    P                    go to state 8
    all_stmt             go to state 9
    compound_stmt        go to state 10
    simple_stmt          go to state 11
    print_stmt           go to state 12
    assignment_stmt      go to state 13
    break_stmt           go to state 14
    continue_stmt        go to state 15
    import_stmt          go to state 16
    aug_assignment_stmt  go to state 17
    while_stmt           go to state 18
    for_stmt             go to state 19


State 1

   29 assignment_stmt: T_IDENTIFIER . indexes T_EQUAL expression_stmt
   42 aug_assignment_stmt: T_IDENTIFIER . arith_operator T_EQUAL expression_stmt

    T_PLUS    shift, and go to state 20
    T_MINUS   shift, and go to state 21
    T_POWER   shift, and go to state 22
    T_STAR    shift, and go to state 23
    T_DIVIDE  shift, and go to state 24
    T_MOD     shift, and go to state 25
    T_OPENS   shift, and go to state 26

    $default  reduce using rule 8 (indexes)

    indexes         go to state 27
    arith_operator  go to state 28


State 2

   74 while_stmt: T_WHILE . logical_exp T_COLON

    T_BOOLEAN     shift, and go to state 29
    T_INTEGER     shift, and go to state 30
    T_IDENTIFIER  shift, and go to state 31
    T_STRING      shift, and go to state 32
    T_FLOAT       shift, and go to state 33
    T_OPENP       shift, and go to state 34
    T_OPENS       shift, and go to state 35

    literal          go to state 36
    list_stmt        go to state 37
    logical_exp      go to state 38
    condition        go to state 39
    expression_stmt  go to state 40
    term             go to state 41
    factor           go to state 42
    power            go to state 43


State 3

   37 break_stmt: T_BREAK .

    $default  reduce using rule 37 (break_stmt)


State 4

   38 continue_stmt: T_CONTINUE .

    $default  reduce using rule 38 (continue_stmt)


State 5

   75 for_stmt: T_FOR . T_IDENTIFIER T_IN range_stmt T_COLON

    T_IDENTIFIER  shift, and go to state 44


State 6

   39 import_stmt: T_IMPORT . import_list

    T_IDENTIFIER  shift, and go to state 45

    import_list  go to state 46


State 7

   26 print_stmt: T_PRINT . T_OPENP print_list T_CLOSEP

    T_OPENP  shift, and go to state 47


State 8

    0 $accept: P . $end

    $end  shift, and go to state 48


State 9

    1 P: all_stmt . T_EOF

    T_EOF  shift, and go to state 49


State 10

   10 all_stmt: compound_stmt .

    $default  reduce using rule 10 (all_stmt)


State 11

    9 all_stmt: simple_stmt . line all_stmt

    T_NEWLINE  shift, and go to state 50

    line  go to state 51


State 12

   19 simple_stmt: print_stmt .

    $default  reduce using rule 19 (simple_stmt)


State 13

   20 simple_stmt: assignment_stmt .

    $default  reduce using rule 20 (simple_stmt)


State 14

   21 simple_stmt: break_stmt .

    $default  reduce using rule 21 (simple_stmt)


State 15

   22 simple_stmt: continue_stmt .

    $default  reduce using rule 22 (simple_stmt)


State 16

   23 simple_stmt: import_stmt .

    $default  reduce using rule 23 (simple_stmt)


State 17

   24 simple_stmt: aug_assignment_stmt .

    $default  reduce using rule 24 (simple_stmt)


State 18

   12 compound_stmt: while_stmt . line suite all_stmt

    T_NEWLINE  shift, and go to state 50

    line  go to state 52


State 19

   13 compound_stmt: for_stmt . line suite all_stmt

    T_NEWLINE  shift, and go to state 50

    line  go to state 53


State 20

   48 arith_operator: T_PLUS .

    $default  reduce using rule 48 (arith_operator)


State 21

   49 arith_operator: T_MINUS .

    $default  reduce using rule 49 (arith_operator)


State 22

   51 arith_operator: T_POWER .

    $default  reduce using rule 51 (arith_operator)


State 23

   50 arith_operator: T_STAR .

    $default  reduce using rule 50 (arith_operator)


State 24

   52 arith_operator: T_DIVIDE .

    $default  reduce using rule 52 (arith_operator)


State 25

   53 arith_operator: T_MOD .

    $default  reduce using rule 53 (arith_operator)


State 26

    7 indexes: T_OPENS . T_INTEGER T_CLOSES indexes

    T_INTEGER  shift, and go to state 54


State 27

   29 assignment_stmt: T_IDENTIFIER indexes . T_EQUAL expression_stmt

    T_EQUAL  shift, and go to state 55


State 28

   42 aug_assignment_stmt: T_IDENTIFIER arith_operator . T_EQUAL expression_stmt

    T_EQUAL  shift, and go to state 56


State 29

    5 literal: T_BOOLEAN .

    $default  reduce using rule 5 (literal)


State 30

    2 literal: T_INTEGER .

    $default  reduce using rule 2 (literal)


State 31

   73 power: T_IDENTIFIER . indexes

    T_OPENS  shift, and go to state 26

    $default  reduce using rule 8 (indexes)

    indexes  go to state 57


State 32

    4 literal: T_STRING .

    $default  reduce using rule 4 (literal)


State 33

    3 literal: T_FLOAT .

    $default  reduce using rule 3 (literal)


State 34

   71 power: T_OPENP . expression_stmt T_CLOSEP

    T_BOOLEAN     shift, and go to state 29
    T_INTEGER     shift, and go to state 30
    T_IDENTIFIER  shift, and go to state 31
    T_STRING      shift, and go to state 32
    T_FLOAT       shift, and go to state 33
    T_OPENP       shift, and go to state 34
    T_OPENS       shift, and go to state 35

    literal          go to state 36
    list_stmt        go to state 37
    expression_stmt  go to state 58
    term             go to state 41
    factor           go to state 42
    power            go to state 43


State 35

   30 list_stmt: T_OPENS . item T_CLOSES
   31          | T_OPENS . T_CLOSES

    T_INTEGER  shift, and go to state 59
    T_FLOAT    shift, and go to state 60
    T_OPENS    shift, and go to state 35
    T_CLOSES   shift, and go to state 61

    list_stmt     go to state 62
    item          go to state 63
    list_literal  go to state 64


State 36

   72 power: literal .

    $default  reduce using rule 72 (power)


State 37

    6 literal: list_stmt .

    $default  reduce using rule 6 (literal)


State 38

   74 while_stmt: T_WHILE logical_exp . T_COLON

    T_COLON  shift, and go to state 65


State 39

   43 logical_exp: condition . rel_op logical_exp
   44            | condition .

    T_OR   shift, and go to state 66
    T_AND  shift, and go to state 67
    T_NOT  shift, and go to state 68

    $default  reduce using rule 44 (logical_exp)

    rel_op  go to state 69


State 40

   54 condition: expression_stmt . comp_operator condition
   55          | expression_stmt .
   62 expression_stmt: expression_stmt . T_PLUS term
   63                | expression_stmt . T_MINUS term

    T_PLUS     shift, and go to state 70
    T_MINUS    shift, and go to state 71
    T_EQUAL    shift, and go to state 72
    T_LESSER   shift, and go to state 73
    T_GREATER  shift, and go to state 74
    T_NO       shift, and go to state 75

    $default  reduce using rule 55 (condition)

    comp_operator  go to state 76


State 41

   64 expression_stmt: term .
   65 term: term . T_STAR factor
   66     | term . T_DIVIDE factor
   67     | term . T_MOD factor

    T_STAR    shift, and go to state 77
    T_DIVIDE  shift, and go to state 78
    T_MOD     shift, and go to state 79

    $default  reduce using rule 64 (expression_stmt)


State 42

   68 term: factor .

    $default  reduce using rule 68 (term)


State 43

   69 factor: power . T_POWER factor
   70       | power .

    T_POWER  shift, and go to state 80

    $default  reduce using rule 70 (factor)


State 44

   75 for_stmt: T_FOR T_IDENTIFIER . T_IN range_stmt T_COLON

    T_IN  shift, and go to state 81


State 45

   40 import_list: T_IDENTIFIER . T_COMMA import_list
   41            | T_IDENTIFIER .

    T_COMMA  shift, and go to state 82

    $default  reduce using rule 41 (import_list)


State 46

   39 import_stmt: T_IMPORT import_list .

    $default  reduce using rule 39 (import_stmt)


State 47

   26 print_stmt: T_PRINT T_OPENP . print_list T_CLOSEP

    T_BOOLEAN     shift, and go to state 29
    T_INTEGER     shift, and go to state 30
    T_IDENTIFIER  shift, and go to state 31
    T_STRING      shift, and go to state 32
    T_FLOAT       shift, and go to state 33
    T_OPENP       shift, and go to state 34
    T_OPENS       shift, and go to state 35

    literal          go to state 36
    print_list       go to state 83
    list_stmt        go to state 37
    expression_stmt  go to state 84
    term             go to state 41
    factor           go to state 42
    power            go to state 43


State 48

    0 $accept: P $end .

    $default  accept


State 49

    1 P: all_stmt T_EOF .

    $default  reduce using rule 1 (P)


State 50

   16 line: T_NEWLINE .

    $default  reduce using rule 16 (line)


State 51

    9 all_stmt: simple_stmt line . all_stmt

    T_IDENTIFIER  shift, and go to state 1
    T_WHILE       shift, and go to state 2
    T_BREAK       shift, and go to state 3
    T_CONTINUE    shift, and go to state 4
    T_FOR         shift, and go to state 5
    T_IMPORT      shift, and go to state 6
    T_PRINT       shift, and go to state 7

    T_NEWLINE  reduce using rule 25 (simple_stmt)
    $default   reduce using rule 11 (all_stmt)

    all_stmt             go to state 85
    compound_stmt        go to state 10
    simple_stmt          go to state 11
    print_stmt           go to state 12
    assignment_stmt      go to state 13
    break_stmt           go to state 14
    continue_stmt        go to state 15
    import_stmt          go to state 16
    aug_assignment_stmt  go to state 17
    while_stmt           go to state 18
    for_stmt             go to state 19


State 52

   12 compound_stmt: while_stmt line . suite all_stmt

    T_INDENT   shift, and go to state 86
    T_NEWLINE  shift, and go to state 50

    suite   go to state 87
    line    go to state 88
    indent  go to state 89


State 53

   13 compound_stmt: for_stmt line . suite all_stmt

    T_INDENT   shift, and go to state 86
    T_NEWLINE  shift, and go to state 50

    suite   go to state 90
    line    go to state 88
    indent  go to state 89


State 54

    7 indexes: T_OPENS T_INTEGER . T_CLOSES indexes

    T_CLOSES  shift, and go to state 91


State 55

   29 assignment_stmt: T_IDENTIFIER indexes T_EQUAL . expression_stmt

    T_BOOLEAN     shift, and go to state 29
    T_INTEGER     shift, and go to state 30
    T_IDENTIFIER  shift, and go to state 31
    T_STRING      shift, and go to state 32
    T_FLOAT       shift, and go to state 33
    T_OPENP       shift, and go to state 34
    T_OPENS       shift, and go to state 35

    literal          go to state 36
    list_stmt        go to state 37
    expression_stmt  go to state 92
    term             go to state 41
    factor           go to state 42
    power            go to state 43


State 56

   42 aug_assignment_stmt: T_IDENTIFIER arith_operator T_EQUAL . expression_stmt

    T_BOOLEAN     shift, and go to state 29
    T_INTEGER     shift, and go to state 30
    T_IDENTIFIER  shift, and go to state 31
    T_STRING      shift, and go to state 32
    T_FLOAT       shift, and go to state 33
    T_OPENP       shift, and go to state 34
    T_OPENS       shift, and go to state 35

    literal          go to state 36
    list_stmt        go to state 37
    expression_stmt  go to state 93
    term             go to state 41
    factor           go to state 42
    power            go to state 43


State 57

   73 power: T_IDENTIFIER indexes .

    $default  reduce using rule 73 (power)


State 58

   62 expression_stmt: expression_stmt . T_PLUS term
   63                | expression_stmt . T_MINUS term
   71 power: T_OPENP expression_stmt . T_CLOSEP

    T_PLUS    shift, and go to state 70
    T_MINUS   shift, and go to state 71
    T_CLOSEP  shift, and go to state 94


State 59

   34 list_literal: T_INTEGER .

    $default  reduce using rule 34 (list_literal)


State 60

   35 list_literal: T_FLOAT .

    $default  reduce using rule 35 (list_literal)


State 61

   31 list_stmt: T_OPENS T_CLOSES .

    $default  reduce using rule 31 (list_stmt)


State 62

   36 list_literal: list_stmt .

    $default  reduce using rule 36 (list_literal)


State 63

   30 list_stmt: T_OPENS item . T_CLOSES

    T_CLOSES  shift, and go to state 95


State 64

   32 item: list_literal . T_COMMA item
   33     | list_literal .

    T_COMMA  shift, and go to state 96

    $default  reduce using rule 33 (item)


State 65

   74 while_stmt: T_WHILE logical_exp T_COLON .

    $default  reduce using rule 74 (while_stmt)


State 66

   46 rel_op: T_OR .

    $default  reduce using rule 46 (rel_op)


State 67

   45 rel_op: T_AND .

    $default  reduce using rule 45 (rel_op)


State 68

   47 rel_op: T_NOT .

    $default  reduce using rule 47 (rel_op)


State 69

   43 logical_exp: condition rel_op . logical_exp

    T_BOOLEAN     shift, and go to state 29
    T_INTEGER     shift, and go to state 30
    T_IDENTIFIER  shift, and go to state 31
    T_STRING      shift, and go to state 32
    T_FLOAT       shift, and go to state 33
    T_OPENP       shift, and go to state 34
    T_OPENS       shift, and go to state 35

    literal          go to state 36
    list_stmt        go to state 37
    logical_exp      go to state 97
    condition        go to state 39
    expression_stmt  go to state 40
    term             go to state 41
    factor           go to state 42
    power            go to state 43


State 70

   62 expression_stmt: expression_stmt T_PLUS . term

    T_BOOLEAN     shift, and go to state 29
    T_INTEGER     shift, and go to state 30
    T_IDENTIFIER  shift, and go to state 31
    T_STRING      shift, and go to state 32
    T_FLOAT       shift, and go to state 33
    T_OPENP       shift, and go to state 34
    T_OPENS       shift, and go to state 35

    literal    go to state 36
    list_stmt  go to state 37
    term       go to state 98
    factor     go to state 42
    power      go to state 43


State 71

   63 expression_stmt: expression_stmt T_MINUS . term

    T_BOOLEAN     shift, and go to state 29
    T_INTEGER     shift, and go to state 30
    T_IDENTIFIER  shift, and go to state 31
    T_STRING      shift, and go to state 32
    T_FLOAT       shift, and go to state 33
    T_OPENP       shift, and go to state 34
    T_OPENS       shift, and go to state 35

    literal    go to state 36
    list_stmt  go to state 37
    term       go to state 99
    factor     go to state 42
    power      go to state 43


State 72

   58 comp_operator: T_EQUAL . T_EQUAL

    T_EQUAL  shift, and go to state 100


State 73

   56 comp_operator: T_LESSER .
   60              | T_LESSER . T_EQUAL

    T_EQUAL  shift, and go to state 101

    $default  reduce using rule 56 (comp_operator)


State 74

   57 comp_operator: T_GREATER .
   59              | T_GREATER . T_EQUAL

    T_EQUAL  shift, and go to state 102

    $default  reduce using rule 57 (comp_operator)


State 75

   61 comp_operator: T_NO . T_EQUAL

    T_EQUAL  shift, and go to state 103


State 76

   54 condition: expression_stmt comp_operator . condition

    T_BOOLEAN     shift, and go to state 29
    T_INTEGER     shift, and go to state 30
    T_IDENTIFIER  shift, and go to state 31
    T_STRING      shift, and go to state 32
    T_FLOAT       shift, and go to state 33
    T_OPENP       shift, and go to state 34
    T_OPENS       shift, and go to state 35

    literal          go to state 36
    list_stmt        go to state 37
    condition        go to state 104
    expression_stmt  go to state 40
    term             go to state 41
    factor           go to state 42
    power            go to state 43


State 77

   65 term: term T_STAR . factor

    T_BOOLEAN     shift, and go to state 29
    T_INTEGER     shift, and go to state 30
    T_IDENTIFIER  shift, and go to state 31
    T_STRING      shift, and go to state 32
    T_FLOAT       shift, and go to state 33
    T_OPENP       shift, and go to state 34
    T_OPENS       shift, and go to state 35

    literal    go to state 36
    list_stmt  go to state 37
    factor     go to state 105
    power      go to state 43


State 78

   66 term: term T_DIVIDE . factor

    T_BOOLEAN     shift, and go to state 29
    T_INTEGER     shift, and go to state 30
    T_IDENTIFIER  shift, and go to state 31
    T_STRING      shift, and go to state 32
    T_FLOAT       shift, and go to state 33
    T_OPENP       shift, and go to state 34
    T_OPENS       shift, and go to state 35

    literal    go to state 36
    list_stmt  go to state 37
    factor     go to state 106
    power      go to state 43


State 79

   67 term: term T_MOD . factor

    T_BOOLEAN     shift, and go to state 29
    T_INTEGER     shift, and go to state 30
    T_IDENTIFIER  shift, and go to state 31
    T_STRING      shift, and go to state 32
    T_FLOAT       shift, and go to state 33
    T_OPENP       shift, and go to state 34
    T_OPENS       shift, and go to state 35

    literal    go to state 36
    list_stmt  go to state 37
    factor     go to state 107
    power      go to state 43


State 80

   69 factor: power T_POWER . factor

    T_BOOLEAN     shift, and go to state 29
    T_INTEGER     shift, and go to state 30
    T_IDENTIFIER  shift, and go to state 31
    T_STRING      shift, and go to state 32
    T_FLOAT       shift, and go to state 33
    T_OPENP       shift, and go to state 34
    T_OPENS       shift, and go to state 35

    literal    go to state 36
    list_stmt  go to state 37
    factor     go to state 108
    power      go to state 43


State 81

   75 for_stmt: T_FOR T_IDENTIFIER T_IN . range_stmt T_COLON

    T_STRING  shift, and go to state 109
    T_RANGE   shift, and go to state 110

    range_stmt  go to state 111


State 82

   40 import_list: T_IDENTIFIER T_COMMA . import_list

    T_IDENTIFIER  shift, and go to state 45

    import_list  go to state 112


State 83

   26 print_stmt: T_PRINT T_OPENP print_list . T_CLOSEP

    T_CLOSEP  shift, and go to state 113


State 84

   27 print_list: expression_stmt . T_COMMA print_list
   28           | expression_stmt .
   62 expression_stmt: expression_stmt . T_PLUS term
   63                | expression_stmt . T_MINUS term

    T_PLUS   shift, and go to state 70
    T_MINUS  shift, and go to state 71
    T_COMMA  shift, and go to state 114

    $default  reduce using rule 28 (print_list)


State 85

    9 all_stmt: simple_stmt line all_stmt .

    $default  reduce using rule 9 (all_stmt)


State 86

   17 indent: T_INDENT .

    $default  reduce using rule 17 (indent)


State 87

   12 compound_stmt: while_stmt line suite . all_stmt

    T_IDENTIFIER  shift, and go to state 1
    T_WHILE       shift, and go to state 2
    T_BREAK       shift, and go to state 3
    T_CONTINUE    shift, and go to state 4
    T_FOR         shift, and go to state 5
    T_IMPORT      shift, and go to state 6
    T_PRINT       shift, and go to state 7

    T_NEWLINE  reduce using rule 25 (simple_stmt)
    $default   reduce using rule 11 (all_stmt)

    all_stmt             go to state 115
    compound_stmt        go to state 10
    simple_stmt          go to state 11
    print_stmt           go to state 12
    assignment_stmt      go to state 13
    break_stmt           go to state 14
    continue_stmt        go to state 15
    import_stmt          go to state 16
    aug_assignment_stmt  go to state 17
    while_stmt           go to state 18
    for_stmt             go to state 19


State 88

   15 suite: line . suite

    T_INDENT   shift, and go to state 86
    T_NEWLINE  shift, and go to state 50

    suite   go to state 116
    line    go to state 88
    indent  go to state 89


State 89

   14 suite: indent . all_stmt dedent

    T_IDENTIFIER  shift, and go to state 1
    T_WHILE       shift, and go to state 2
    T_BREAK       shift, and go to state 3
    T_CONTINUE    shift, and go to state 4
    T_FOR         shift, and go to state 5
    T_IMPORT      shift, and go to state 6
    T_PRINT       shift, and go to state 7

    T_NEWLINE  reduce using rule 25 (simple_stmt)
    $default   reduce using rule 11 (all_stmt)

    all_stmt             go to state 117
    compound_stmt        go to state 10
    simple_stmt          go to state 11
    print_stmt           go to state 12
    assignment_stmt      go to state 13
    break_stmt           go to state 14
    continue_stmt        go to state 15
    import_stmt          go to state 16
    aug_assignment_stmt  go to state 17
    while_stmt           go to state 18
    for_stmt             go to state 19


State 90

   13 compound_stmt: for_stmt line suite . all_stmt

    T_IDENTIFIER  shift, and go to state 1
    T_WHILE       shift, and go to state 2
    T_BREAK       shift, and go to state 3
    T_CONTINUE    shift, and go to state 4
    T_FOR         shift, and go to state 5
    T_IMPORT      shift, and go to state 6
    T_PRINT       shift, and go to state 7

    T_NEWLINE  reduce using rule 25 (simple_stmt)
    $default   reduce using rule 11 (all_stmt)

    all_stmt             go to state 118
    compound_stmt        go to state 10
    simple_stmt          go to state 11
    print_stmt           go to state 12
    assignment_stmt      go to state 13
    break_stmt           go to state 14
    continue_stmt        go to state 15
    import_stmt          go to state 16
    aug_assignment_stmt  go to state 17
    while_stmt           go to state 18
    for_stmt             go to state 19


State 91

    7 indexes: T_OPENS T_INTEGER T_CLOSES . indexes

    T_OPENS  shift, and go to state 26

    $default  reduce using rule 8 (indexes)

    indexes  go to state 119


State 92

   29 assignment_stmt: T_IDENTIFIER indexes T_EQUAL expression_stmt .
   62 expression_stmt: expression_stmt . T_PLUS term
   63                | expression_stmt . T_MINUS term

    T_PLUS   shift, and go to state 70
    T_MINUS  shift, and go to state 71

    $default  reduce using rule 29 (assignment_stmt)


State 93

   42 aug_assignment_stmt: T_IDENTIFIER arith_operator T_EQUAL expression_stmt .
   62 expression_stmt: expression_stmt . T_PLUS term
   63                | expression_stmt . T_MINUS term

    T_PLUS   shift, and go to state 70
    T_MINUS  shift, and go to state 71

    $default  reduce using rule 42 (aug_assignment_stmt)


State 94

   71 power: T_OPENP expression_stmt T_CLOSEP .

    $default  reduce using rule 71 (power)


State 95

   30 list_stmt: T_OPENS item T_CLOSES .

    $default  reduce using rule 30 (list_stmt)


State 96

   32 item: list_literal T_COMMA . item

    T_INTEGER  shift, and go to state 59
    T_FLOAT    shift, and go to state 60
    T_OPENS    shift, and go to state 35

    list_stmt     go to state 62
    item          go to state 120
    list_literal  go to state 64


State 97

   43 logical_exp: condition rel_op logical_exp .

    $default  reduce using rule 43 (logical_exp)


State 98

   62 expression_stmt: expression_stmt T_PLUS term .
   65 term: term . T_STAR factor
   66     | term . T_DIVIDE factor
   67     | term . T_MOD factor

    T_STAR    shift, and go to state 77
    T_DIVIDE  shift, and go to state 78
    T_MOD     shift, and go to state 79

    $default  reduce using rule 62 (expression_stmt)


State 99

   63 expression_stmt: expression_stmt T_MINUS term .
   65 term: term . T_STAR factor
   66     | term . T_DIVIDE factor
   67     | term . T_MOD factor

    T_STAR    shift, and go to state 77
    T_DIVIDE  shift, and go to state 78
    T_MOD     shift, and go to state 79

    $default  reduce using rule 63 (expression_stmt)


State 100

   58 comp_operator: T_EQUAL T_EQUAL .

    $default  reduce using rule 58 (comp_operator)


State 101

   60 comp_operator: T_LESSER T_EQUAL .

    $default  reduce using rule 60 (comp_operator)


State 102

   59 comp_operator: T_GREATER T_EQUAL .

    $default  reduce using rule 59 (comp_operator)


State 103

   61 comp_operator: T_NO T_EQUAL .

    $default  reduce using rule 61 (comp_operator)


State 104

   54 condition: expression_stmt comp_operator condition .

    $default  reduce using rule 54 (condition)


State 105

   65 term: term T_STAR factor .

    $default  reduce using rule 65 (term)


State 106

   66 term: term T_DIVIDE factor .

    $default  reduce using rule 66 (term)


State 107

   67 term: term T_MOD factor .

    $default  reduce using rule 67 (term)


State 108

   69 factor: power T_POWER factor .

    $default  reduce using rule 69 (factor)


State 109

   78 range_stmt: T_STRING .

    $default  reduce using rule 78 (range_stmt)


State 110

   76 range_stmt: T_RANGE . T_OPENP T_INTEGER T_COMMA T_INTEGER T_CLOSEP
   77           | T_RANGE . T_OPENP T_INTEGER T_COMMA T_INTEGER T_COMMA T_INTEGER T_CLOSEP

    T_OPENP  shift, and go to state 121


State 111

   75 for_stmt: T_FOR T_IDENTIFIER T_IN range_stmt . T_COLON

    T_COLON  shift, and go to state 122


State 112

   40 import_list: T_IDENTIFIER T_COMMA import_list .

    $default  reduce using rule 40 (import_list)


State 113

   26 print_stmt: T_PRINT T_OPENP print_list T_CLOSEP .

    $default  reduce using rule 26 (print_stmt)


State 114

   27 print_list: expression_stmt T_COMMA . print_list

    T_BOOLEAN     shift, and go to state 29
    T_INTEGER     shift, and go to state 30
    T_IDENTIFIER  shift, and go to state 31
    T_STRING      shift, and go to state 32
    T_FLOAT       shift, and go to state 33
    T_OPENP       shift, and go to state 34
    T_OPENS       shift, and go to state 35

    literal          go to state 36
    print_list       go to state 123
    list_stmt        go to state 37
    expression_stmt  go to state 84
    term             go to state 41
    factor           go to state 42
    power            go to state 43


State 115

   12 compound_stmt: while_stmt line suite all_stmt .

    $default  reduce using rule 12 (compound_stmt)


State 116

   15 suite: line suite .

    $default  reduce using rule 15 (suite)


State 117

   14 suite: indent all_stmt . dedent

    T_DEDENT  shift, and go to state 124

    dedent  go to state 125


State 118

   13 compound_stmt: for_stmt line suite all_stmt .

    $default  reduce using rule 13 (compound_stmt)


State 119

    7 indexes: T_OPENS T_INTEGER T_CLOSES indexes .

    $default  reduce using rule 7 (indexes)


State 120

   32 item: list_literal T_COMMA item .

    $default  reduce using rule 32 (item)


State 121

   76 range_stmt: T_RANGE T_OPENP . T_INTEGER T_COMMA T_INTEGER T_CLOSEP
   77           | T_RANGE T_OPENP . T_INTEGER T_COMMA T_INTEGER T_COMMA T_INTEGER T_CLOSEP

    T_INTEGER  shift, and go to state 126


State 122

   75 for_stmt: T_FOR T_IDENTIFIER T_IN range_stmt T_COLON .

    $default  reduce using rule 75 (for_stmt)


State 123

   27 print_list: expression_stmt T_COMMA print_list .

    $default  reduce using rule 27 (print_list)


State 124

   18 dedent: T_DEDENT .

    $default  reduce using rule 18 (dedent)


State 125

   14 suite: indent all_stmt dedent .

    $default  reduce using rule 14 (suite)


State 126

   76 range_stmt: T_RANGE T_OPENP T_INTEGER . T_COMMA T_INTEGER T_CLOSEP
   77           | T_RANGE T_OPENP T_INTEGER . T_COMMA T_INTEGER T_COMMA T_INTEGER T_CLOSEP

    T_COMMA  shift, and go to state 127


State 127

   76 range_stmt: T_RANGE T_OPENP T_INTEGER T_COMMA . T_INTEGER T_CLOSEP
   77           | T_RANGE T_OPENP T_INTEGER T_COMMA . T_INTEGER T_COMMA T_INTEGER T_CLOSEP

    T_INTEGER  shift, and go to state 128


State 128

   76 range_stmt: T_RANGE T_OPENP T_INTEGER T_COMMA T_INTEGER . T_CLOSEP
   77           | T_RANGE T_OPENP T_INTEGER T_COMMA T_INTEGER . T_COMMA T_INTEGER T_CLOSEP

    T_CLOSEP  shift, and go to state 129
    T_COMMA   shift, and go to state 130


State 129

   76 range_stmt: T_RANGE T_OPENP T_INTEGER T_COMMA T_INTEGER T_CLOSEP .

    $default  reduce using rule 76 (range_stmt)


State 130

   77 range_stmt: T_RANGE T_OPENP T_INTEGER T_COMMA T_INTEGER T_COMMA . T_INTEGER T_CLOSEP

    T_INTEGER  shift, and go to state 131


State 131

   77 range_stmt: T_RANGE T_OPENP T_INTEGER T_COMMA T_INTEGER T_COMMA T_INTEGER . T_CLOSEP

    T_CLOSEP  shift, and go to state 132


State 132

   77 range_stmt: T_RANGE T_OPENP T_INTEGER T_COMMA T_INTEGER T_COMMA T_INTEGER T_CLOSEP .

    $default  reduce using rule 77 (range_stmt)
