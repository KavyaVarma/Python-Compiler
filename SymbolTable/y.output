Terminals unused in grammar

   T_FROM
   T_WITH
   T_ELSE
   T_IF
   T_RETURN
   T_DEF
   T_AS
   T_SEMICOLON


Grammar

    0 $accept: P $end

    1 P: all_stmt T_EOF

    2 literal: T_INTEGER
    3        | T_FLOAT
    4        | T_STRING
    5        | T_BOOLEAN
    6        | list_stmt

    7 indexes: T_OPENS T_INTEGER T_CLOSES indexes
    8        | %empty

    9 all_stmt: simple_stmt line all_stmt

   10 $@1: %empty

   11 $@2: %empty

   12 all_stmt: $@1 compound_stmt line suite $@2 all_stmt
   13         | %empty

   14 compound_stmt: while_stmt
   15              | for_stmt

   16 suite: indent all_stmt dedent
   17      | line suite

   18 line: T_NEWLINE

   19 indent: T_INDENT

   20 dedent: T_DEDENT

   21 simple_stmt: print_stmt
   22            | assignment_stmt
   23            | break_stmt
   24            | continue_stmt
   25            | import_stmt
   26            | aug_assignment_stmt
   27            | %empty

   28 print_stmt: T_PRINT T_OPENP print_list T_CLOSEP

   29 print_list: expression_stmt T_COMMA print_list
   30           | expression_stmt

   31 assignment_stmt: T_IDENTIFIER indexes T_EQUAL expression_stmt

   32 list_stmt: T_OPENS item T_CLOSES
   33          | T_OPENS T_CLOSES

   34 item: list_literal T_COMMA item
   35     | list_literal

   36 list_literal: T_INTEGER
   37             | T_FLOAT
   38             | list_stmt

   39 break_stmt: T_BREAK

   40 continue_stmt: T_CONTINUE

   41 import_stmt: T_IMPORT import_list

   42 import_list: T_IDENTIFIER T_COMMA import_list
   43            | T_IDENTIFIER

   44 aug_assignment_stmt: T_IDENTIFIER arith_operator T_EQUAL expression_stmt

   45 logical_exp: condition rel_op logical_exp
   46            | condition

   47 rel_op: T_AND
   48       | T_OR
   49       | T_NOT

   50 arith_operator: T_PLUS
   51               | T_MINUS
   52               | T_STAR
   53               | T_POWER
   54               | T_DIVIDE
   55               | T_MOD

   56 condition: expression_stmt comp_operator condition
   57          | expression_stmt

   58 comp_operator: T_LESSER
   59              | T_GREATER
   60              | T_EQUAL T_EQUAL
   61              | T_GREATER T_EQUAL
   62              | T_LESSER T_EQUAL
   63              | T_NO T_EQUAL

   64 expression_stmt: expression_stmt T_PLUS term
   65                | expression_stmt T_MINUS term
   66                | term

   67 term: term T_STAR factor
   68     | term T_DIVIDE factor
   69     | term T_MOD factor
   70     | factor

   71 factor: power T_POWER factor
   72       | power

   73 power: T_OPENP expression_stmt T_CLOSEP
   74      | literal
   75      | T_IDENTIFIER indexes

   76 while_stmt: T_WHILE logical_exp T_COLON

   77 for_stmt: T_FOR T_IDENTIFIER T_IN range_stmt T_COLON

   78 range_stmt: T_RANGE T_OPENP T_INTEGER T_COMMA T_INTEGER T_CLOSEP
   79           | T_RANGE T_OPENP T_INTEGER T_COMMA T_INTEGER T_COMMA T_INTEGER T_CLOSEP
   80           | T_STRING


Terminals, with rules where they appear

$end (0) 0
error (256)
T_OR (258) 48
T_AND (259) 47
T_BOOLEAN (260) 5
T_INTEGER (261) 2 7 36 78 79
T_IDENTIFIER (262) 31 42 43 44 75 77
T_STRING (263) 4 80
T_FLOAT (264) 3 37
T_FROM (265)
T_NOT (266) 49
T_WHILE (267) 76
T_WITH (268)
T_ELSE (269)
T_IF (270)
T_BREAK (271) 39
T_IN (272) 77
T_CONTINUE (273) 40
T_RETURN (274)
T_DEF (275)
T_FOR (276) 77
T_IMPORT (277) 41
T_AS (278)
T_PRINT (279) 28
T_PLUS (280) 50 64
T_MINUS (281) 51 65
T_POWER (282) 53 71
T_STAR (283) 52 67
T_DIVIDE (284) 54 68
T_MOD (285) 55 69
T_OPENP (286) 28 73 78 79
T_CLOSEP (287) 28 73 78 79
T_OPENS (288) 7 32 33
T_CLOSES (289) 7 32 33
T_EQUAL (290) 31 44 60 61 62 63
T_COMMA (291) 29 34 42 78 79
T_INDENT (292) 19
T_LESSER (293) 58 62
T_GREATER (294) 59 61
T_NO (295) 63
T_NEWLINE (296) 18
T_COLON (297) 76 77
T_RANGE (298) 78 79
T_DEDENT (299) 20
T_EOF (300) 1
T_SEMICOLON (301)


Nonterminals, with rules where they appear

$accept (47)
    on left: 0
P (48)
    on left: 1, on right: 0
literal (49)
    on left: 2 3 4 5 6, on right: 74
indexes (50)
    on left: 7 8, on right: 7 31 75
all_stmt (51)
    on left: 9 12 13, on right: 1 9 12 16
$@1 (52)
    on left: 10, on right: 12
$@2 (53)
    on left: 11, on right: 12
compound_stmt (54)
    on left: 14 15, on right: 12
suite (55)
    on left: 16 17, on right: 12 17
line (56)
    on left: 18, on right: 9 12 17
indent (57)
    on left: 19, on right: 16
dedent (58)
    on left: 20, on right: 16
simple_stmt (59)
    on left: 21 22 23 24 25 26 27, on right: 9
print_stmt (60)
    on left: 28, on right: 21
print_list (61)
    on left: 29 30, on right: 28 29
assignment_stmt (62)
    on left: 31, on right: 22
list_stmt (63)
    on left: 32 33, on right: 6 38
item (64)
    on left: 34 35, on right: 32 34
list_literal (65)
    on left: 36 37 38, on right: 34 35
break_stmt (66)
    on left: 39, on right: 23
continue_stmt (67)
    on left: 40, on right: 24
import_stmt (68)
    on left: 41, on right: 25
import_list (69)
    on left: 42 43, on right: 41 42
aug_assignment_stmt (70)
    on left: 44, on right: 26
logical_exp (71)
    on left: 45 46, on right: 45 76
rel_op (72)
    on left: 47 48 49, on right: 45
arith_operator (73)
    on left: 50 51 52 53 54 55, on right: 44
condition (74)
    on left: 56 57, on right: 45 46 56
comp_operator (75)
    on left: 58 59 60 61 62 63, on right: 56
expression_stmt (76)
    on left: 64 65 66, on right: 29 30 31 44 56 57 64 65 73
term (77)
    on left: 67 68 69 70, on right: 64 65 66 67 68 69
factor (78)
    on left: 71 72, on right: 67 68 69 70 71
power (79)
    on left: 73 74 75, on right: 71 72
while_stmt (80)
    on left: 76, on right: 14
for_stmt (81)
    on left: 77, on right: 15
range_stmt (82)
    on left: 78 79 80, on right: 77


State 0

    0 $accept: . P $end

    T_IDENTIFIER  shift, and go to state 1
    T_BREAK       shift, and go to state 2
    T_CONTINUE    shift, and go to state 3
    T_IMPORT      shift, and go to state 4
    T_PRINT       shift, and go to state 5

    T_NEWLINE  reduce using rule 27 (simple_stmt)
    T_EOF      reduce using rule 13 (all_stmt)
    $default   reduce using rule 10 ($@1)

    P                    go to state 6
    all_stmt             go to state 7
    $@1                  go to state 8
    simple_stmt          go to state 9
    print_stmt           go to state 10
    assignment_stmt      go to state 11
    break_stmt           go to state 12
    continue_stmt        go to state 13
    import_stmt          go to state 14
    aug_assignment_stmt  go to state 15


State 1

   31 assignment_stmt: T_IDENTIFIER . indexes T_EQUAL expression_stmt
   44 aug_assignment_stmt: T_IDENTIFIER . arith_operator T_EQUAL expression_stmt

    T_PLUS    shift, and go to state 16
    T_MINUS   shift, and go to state 17
    T_POWER   shift, and go to state 18
    T_STAR    shift, and go to state 19
    T_DIVIDE  shift, and go to state 20
    T_MOD     shift, and go to state 21
    T_OPENS   shift, and go to state 22

    $default  reduce using rule 8 (indexes)

    indexes         go to state 23
    arith_operator  go to state 24


State 2

   39 break_stmt: T_BREAK .

    $default  reduce using rule 39 (break_stmt)


State 3

   40 continue_stmt: T_CONTINUE .

    $default  reduce using rule 40 (continue_stmt)


State 4

   41 import_stmt: T_IMPORT . import_list

    T_IDENTIFIER  shift, and go to state 25

    import_list  go to state 26


State 5

   28 print_stmt: T_PRINT . T_OPENP print_list T_CLOSEP

    T_OPENP  shift, and go to state 27


State 6

    0 $accept: P . $end

    $end  shift, and go to state 28


State 7

    1 P: all_stmt . T_EOF

    T_EOF  shift, and go to state 29


State 8

   12 all_stmt: $@1 . compound_stmt line suite $@2 all_stmt

    T_WHILE  shift, and go to state 30
    T_FOR    shift, and go to state 31

    compound_stmt  go to state 32
    while_stmt     go to state 33
    for_stmt       go to state 34


State 9

    9 all_stmt: simple_stmt . line all_stmt

    T_NEWLINE  shift, and go to state 35

    line  go to state 36


State 10

   21 simple_stmt: print_stmt .

    $default  reduce using rule 21 (simple_stmt)


State 11

   22 simple_stmt: assignment_stmt .

    $default  reduce using rule 22 (simple_stmt)


State 12

   23 simple_stmt: break_stmt .

    $default  reduce using rule 23 (simple_stmt)


State 13

   24 simple_stmt: continue_stmt .

    $default  reduce using rule 24 (simple_stmt)


State 14

   25 simple_stmt: import_stmt .

    $default  reduce using rule 25 (simple_stmt)


State 15

   26 simple_stmt: aug_assignment_stmt .

    $default  reduce using rule 26 (simple_stmt)


State 16

   50 arith_operator: T_PLUS .

    $default  reduce using rule 50 (arith_operator)


State 17

   51 arith_operator: T_MINUS .

    $default  reduce using rule 51 (arith_operator)


State 18

   53 arith_operator: T_POWER .

    $default  reduce using rule 53 (arith_operator)


State 19

   52 arith_operator: T_STAR .

    $default  reduce using rule 52 (arith_operator)


State 20

   54 arith_operator: T_DIVIDE .

    $default  reduce using rule 54 (arith_operator)


State 21

   55 arith_operator: T_MOD .

    $default  reduce using rule 55 (arith_operator)


State 22

    7 indexes: T_OPENS . T_INTEGER T_CLOSES indexes

    T_INTEGER  shift, and go to state 37


State 23

   31 assignment_stmt: T_IDENTIFIER indexes . T_EQUAL expression_stmt

    T_EQUAL  shift, and go to state 38


State 24

   44 aug_assignment_stmt: T_IDENTIFIER arith_operator . T_EQUAL expression_stmt

    T_EQUAL  shift, and go to state 39


State 25

   42 import_list: T_IDENTIFIER . T_COMMA import_list
   43            | T_IDENTIFIER .

    T_COMMA  shift, and go to state 40

    $default  reduce using rule 43 (import_list)


State 26

   41 import_stmt: T_IMPORT import_list .

    $default  reduce using rule 41 (import_stmt)


State 27

   28 print_stmt: T_PRINT T_OPENP . print_list T_CLOSEP

    T_BOOLEAN     shift, and go to state 41
    T_INTEGER     shift, and go to state 42
    T_IDENTIFIER  shift, and go to state 43
    T_STRING      shift, and go to state 44
    T_FLOAT       shift, and go to state 45
    T_OPENP       shift, and go to state 46
    T_OPENS       shift, and go to state 47

    literal          go to state 48
    print_list       go to state 49
    list_stmt        go to state 50
    expression_stmt  go to state 51
    term             go to state 52
    factor           go to state 53
    power            go to state 54


State 28

    0 $accept: P $end .

    $default  accept


State 29

    1 P: all_stmt T_EOF .

    $default  reduce using rule 1 (P)


State 30

   76 while_stmt: T_WHILE . logical_exp T_COLON

    T_BOOLEAN     shift, and go to state 41
    T_INTEGER     shift, and go to state 42
    T_IDENTIFIER  shift, and go to state 43
    T_STRING      shift, and go to state 44
    T_FLOAT       shift, and go to state 45
    T_OPENP       shift, and go to state 46
    T_OPENS       shift, and go to state 47

    literal          go to state 48
    list_stmt        go to state 50
    logical_exp      go to state 55
    condition        go to state 56
    expression_stmt  go to state 57
    term             go to state 52
    factor           go to state 53
    power            go to state 54


State 31

   77 for_stmt: T_FOR . T_IDENTIFIER T_IN range_stmt T_COLON

    T_IDENTIFIER  shift, and go to state 58


State 32

   12 all_stmt: $@1 compound_stmt . line suite $@2 all_stmt

    T_NEWLINE  shift, and go to state 35

    line  go to state 59


State 33

   14 compound_stmt: while_stmt .

    $default  reduce using rule 14 (compound_stmt)


State 34

   15 compound_stmt: for_stmt .

    $default  reduce using rule 15 (compound_stmt)


State 35

   18 line: T_NEWLINE .

    $default  reduce using rule 18 (line)


State 36

    9 all_stmt: simple_stmt line . all_stmt

    T_IDENTIFIER  shift, and go to state 1
    T_BREAK       shift, and go to state 2
    T_CONTINUE    shift, and go to state 3
    T_IMPORT      shift, and go to state 4
    T_PRINT       shift, and go to state 5

    T_NEWLINE  reduce using rule 27 (simple_stmt)
    T_DEDENT   reduce using rule 13 (all_stmt)
    T_EOF      reduce using rule 13 (all_stmt)
    $default   reduce using rule 10 ($@1)

    all_stmt             go to state 60
    $@1                  go to state 8
    simple_stmt          go to state 9
    print_stmt           go to state 10
    assignment_stmt      go to state 11
    break_stmt           go to state 12
    continue_stmt        go to state 13
    import_stmt          go to state 14
    aug_assignment_stmt  go to state 15


State 37

    7 indexes: T_OPENS T_INTEGER . T_CLOSES indexes

    T_CLOSES  shift, and go to state 61


State 38

   31 assignment_stmt: T_IDENTIFIER indexes T_EQUAL . expression_stmt

    T_BOOLEAN     shift, and go to state 41
    T_INTEGER     shift, and go to state 42
    T_IDENTIFIER  shift, and go to state 43
    T_STRING      shift, and go to state 44
    T_FLOAT       shift, and go to state 45
    T_OPENP       shift, and go to state 46
    T_OPENS       shift, and go to state 47

    literal          go to state 48
    list_stmt        go to state 50
    expression_stmt  go to state 62
    term             go to state 52
    factor           go to state 53
    power            go to state 54


State 39

   44 aug_assignment_stmt: T_IDENTIFIER arith_operator T_EQUAL . expression_stmt

    T_BOOLEAN     shift, and go to state 41
    T_INTEGER     shift, and go to state 42
    T_IDENTIFIER  shift, and go to state 43
    T_STRING      shift, and go to state 44
    T_FLOAT       shift, and go to state 45
    T_OPENP       shift, and go to state 46
    T_OPENS       shift, and go to state 47

    literal          go to state 48
    list_stmt        go to state 50
    expression_stmt  go to state 63
    term             go to state 52
    factor           go to state 53
    power            go to state 54


State 40

   42 import_list: T_IDENTIFIER T_COMMA . import_list

    T_IDENTIFIER  shift, and go to state 25

    import_list  go to state 64


State 41

    5 literal: T_BOOLEAN .

    $default  reduce using rule 5 (literal)


State 42

    2 literal: T_INTEGER .

    $default  reduce using rule 2 (literal)


State 43

   75 power: T_IDENTIFIER . indexes

    T_OPENS  shift, and go to state 22

    $default  reduce using rule 8 (indexes)

    indexes  go to state 65


State 44

    4 literal: T_STRING .

    $default  reduce using rule 4 (literal)


State 45

    3 literal: T_FLOAT .

    $default  reduce using rule 3 (literal)


State 46

   73 power: T_OPENP . expression_stmt T_CLOSEP

    T_BOOLEAN     shift, and go to state 41
    T_INTEGER     shift, and go to state 42
    T_IDENTIFIER  shift, and go to state 43
    T_STRING      shift, and go to state 44
    T_FLOAT       shift, and go to state 45
    T_OPENP       shift, and go to state 46
    T_OPENS       shift, and go to state 47

    literal          go to state 48
    list_stmt        go to state 50
    expression_stmt  go to state 66
    term             go to state 52
    factor           go to state 53
    power            go to state 54


State 47

   32 list_stmt: T_OPENS . item T_CLOSES
   33          | T_OPENS . T_CLOSES

    T_INTEGER  shift, and go to state 67
    T_FLOAT    shift, and go to state 68
    T_OPENS    shift, and go to state 47
    T_CLOSES   shift, and go to state 69

    list_stmt     go to state 70
    item          go to state 71
    list_literal  go to state 72


State 48

   74 power: literal .

    $default  reduce using rule 74 (power)


State 49

   28 print_stmt: T_PRINT T_OPENP print_list . T_CLOSEP

    T_CLOSEP  shift, and go to state 73


State 50

    6 literal: list_stmt .

    $default  reduce using rule 6 (literal)


State 51

   29 print_list: expression_stmt . T_COMMA print_list
   30           | expression_stmt .
   64 expression_stmt: expression_stmt . T_PLUS term
   65                | expression_stmt . T_MINUS term

    T_PLUS   shift, and go to state 74
    T_MINUS  shift, and go to state 75
    T_COMMA  shift, and go to state 76

    $default  reduce using rule 30 (print_list)


State 52

   66 expression_stmt: term .
   67 term: term . T_STAR factor
   68     | term . T_DIVIDE factor
   69     | term . T_MOD factor

    T_STAR    shift, and go to state 77
    T_DIVIDE  shift, and go to state 78
    T_MOD     shift, and go to state 79

    $default  reduce using rule 66 (expression_stmt)


State 53

   70 term: factor .

    $default  reduce using rule 70 (term)


State 54

   71 factor: power . T_POWER factor
   72       | power .

    T_POWER  shift, and go to state 80

    $default  reduce using rule 72 (factor)


State 55

   76 while_stmt: T_WHILE logical_exp . T_COLON

    T_COLON  shift, and go to state 81


State 56

   45 logical_exp: condition . rel_op logical_exp
   46            | condition .

    T_OR   shift, and go to state 82
    T_AND  shift, and go to state 83
    T_NOT  shift, and go to state 84

    $default  reduce using rule 46 (logical_exp)

    rel_op  go to state 85


State 57

   56 condition: expression_stmt . comp_operator condition
   57          | expression_stmt .
   64 expression_stmt: expression_stmt . T_PLUS term
   65                | expression_stmt . T_MINUS term

    T_PLUS     shift, and go to state 74
    T_MINUS    shift, and go to state 75
    T_EQUAL    shift, and go to state 86
    T_LESSER   shift, and go to state 87
    T_GREATER  shift, and go to state 88
    T_NO       shift, and go to state 89

    $default  reduce using rule 57 (condition)

    comp_operator  go to state 90


State 58

   77 for_stmt: T_FOR T_IDENTIFIER . T_IN range_stmt T_COLON

    T_IN  shift, and go to state 91


State 59

   12 all_stmt: $@1 compound_stmt line . suite $@2 all_stmt

    T_INDENT   shift, and go to state 92
    T_NEWLINE  shift, and go to state 35

    suite   go to state 93
    line    go to state 94
    indent  go to state 95


State 60

    9 all_stmt: simple_stmt line all_stmt .

    $default  reduce using rule 9 (all_stmt)


State 61

    7 indexes: T_OPENS T_INTEGER T_CLOSES . indexes

    T_OPENS  shift, and go to state 22

    $default  reduce using rule 8 (indexes)

    indexes  go to state 96


State 62

   31 assignment_stmt: T_IDENTIFIER indexes T_EQUAL expression_stmt .
   64 expression_stmt: expression_stmt . T_PLUS term
   65                | expression_stmt . T_MINUS term

    T_PLUS   shift, and go to state 74
    T_MINUS  shift, and go to state 75

    $default  reduce using rule 31 (assignment_stmt)


State 63

   44 aug_assignment_stmt: T_IDENTIFIER arith_operator T_EQUAL expression_stmt .
   64 expression_stmt: expression_stmt . T_PLUS term
   65                | expression_stmt . T_MINUS term

    T_PLUS   shift, and go to state 74
    T_MINUS  shift, and go to state 75

    $default  reduce using rule 44 (aug_assignment_stmt)


State 64

   42 import_list: T_IDENTIFIER T_COMMA import_list .

    $default  reduce using rule 42 (import_list)


State 65

   75 power: T_IDENTIFIER indexes .

    $default  reduce using rule 75 (power)


State 66

   64 expression_stmt: expression_stmt . T_PLUS term
   65                | expression_stmt . T_MINUS term
   73 power: T_OPENP expression_stmt . T_CLOSEP

    T_PLUS    shift, and go to state 74
    T_MINUS   shift, and go to state 75
    T_CLOSEP  shift, and go to state 97


State 67

   36 list_literal: T_INTEGER .

    $default  reduce using rule 36 (list_literal)


State 68

   37 list_literal: T_FLOAT .

    $default  reduce using rule 37 (list_literal)


State 69

   33 list_stmt: T_OPENS T_CLOSES .

    $default  reduce using rule 33 (list_stmt)


State 70

   38 list_literal: list_stmt .

    $default  reduce using rule 38 (list_literal)


State 71

   32 list_stmt: T_OPENS item . T_CLOSES

    T_CLOSES  shift, and go to state 98


State 72

   34 item: list_literal . T_COMMA item
   35     | list_literal .

    T_COMMA  shift, and go to state 99

    $default  reduce using rule 35 (item)


State 73

   28 print_stmt: T_PRINT T_OPENP print_list T_CLOSEP .

    $default  reduce using rule 28 (print_stmt)


State 74

   64 expression_stmt: expression_stmt T_PLUS . term

    T_BOOLEAN     shift, and go to state 41
    T_INTEGER     shift, and go to state 42
    T_IDENTIFIER  shift, and go to state 43
    T_STRING      shift, and go to state 44
    T_FLOAT       shift, and go to state 45
    T_OPENP       shift, and go to state 46
    T_OPENS       shift, and go to state 47

    literal    go to state 48
    list_stmt  go to state 50
    term       go to state 100
    factor     go to state 53
    power      go to state 54


State 75

   65 expression_stmt: expression_stmt T_MINUS . term

    T_BOOLEAN     shift, and go to state 41
    T_INTEGER     shift, and go to state 42
    T_IDENTIFIER  shift, and go to state 43
    T_STRING      shift, and go to state 44
    T_FLOAT       shift, and go to state 45
    T_OPENP       shift, and go to state 46
    T_OPENS       shift, and go to state 47

    literal    go to state 48
    list_stmt  go to state 50
    term       go to state 101
    factor     go to state 53
    power      go to state 54


State 76

   29 print_list: expression_stmt T_COMMA . print_list

    T_BOOLEAN     shift, and go to state 41
    T_INTEGER     shift, and go to state 42
    T_IDENTIFIER  shift, and go to state 43
    T_STRING      shift, and go to state 44
    T_FLOAT       shift, and go to state 45
    T_OPENP       shift, and go to state 46
    T_OPENS       shift, and go to state 47

    literal          go to state 48
    print_list       go to state 102
    list_stmt        go to state 50
    expression_stmt  go to state 51
    term             go to state 52
    factor           go to state 53
    power            go to state 54


State 77

   67 term: term T_STAR . factor

    T_BOOLEAN     shift, and go to state 41
    T_INTEGER     shift, and go to state 42
    T_IDENTIFIER  shift, and go to state 43
    T_STRING      shift, and go to state 44
    T_FLOAT       shift, and go to state 45
    T_OPENP       shift, and go to state 46
    T_OPENS       shift, and go to state 47

    literal    go to state 48
    list_stmt  go to state 50
    factor     go to state 103
    power      go to state 54


State 78

   68 term: term T_DIVIDE . factor

    T_BOOLEAN     shift, and go to state 41
    T_INTEGER     shift, and go to state 42
    T_IDENTIFIER  shift, and go to state 43
    T_STRING      shift, and go to state 44
    T_FLOAT       shift, and go to state 45
    T_OPENP       shift, and go to state 46
    T_OPENS       shift, and go to state 47

    literal    go to state 48
    list_stmt  go to state 50
    factor     go to state 104
    power      go to state 54


State 79

   69 term: term T_MOD . factor

    T_BOOLEAN     shift, and go to state 41
    T_INTEGER     shift, and go to state 42
    T_IDENTIFIER  shift, and go to state 43
    T_STRING      shift, and go to state 44
    T_FLOAT       shift, and go to state 45
    T_OPENP       shift, and go to state 46
    T_OPENS       shift, and go to state 47

    literal    go to state 48
    list_stmt  go to state 50
    factor     go to state 105
    power      go to state 54


State 80

   71 factor: power T_POWER . factor

    T_BOOLEAN     shift, and go to state 41
    T_INTEGER     shift, and go to state 42
    T_IDENTIFIER  shift, and go to state 43
    T_STRING      shift, and go to state 44
    T_FLOAT       shift, and go to state 45
    T_OPENP       shift, and go to state 46
    T_OPENS       shift, and go to state 47

    literal    go to state 48
    list_stmt  go to state 50
    factor     go to state 106
    power      go to state 54


State 81

   76 while_stmt: T_WHILE logical_exp T_COLON .

    $default  reduce using rule 76 (while_stmt)


State 82

   48 rel_op: T_OR .

    $default  reduce using rule 48 (rel_op)


State 83

   47 rel_op: T_AND .

    $default  reduce using rule 47 (rel_op)


State 84

   49 rel_op: T_NOT .

    $default  reduce using rule 49 (rel_op)


State 85

   45 logical_exp: condition rel_op . logical_exp

    T_BOOLEAN     shift, and go to state 41
    T_INTEGER     shift, and go to state 42
    T_IDENTIFIER  shift, and go to state 43
    T_STRING      shift, and go to state 44
    T_FLOAT       shift, and go to state 45
    T_OPENP       shift, and go to state 46
    T_OPENS       shift, and go to state 47

    literal          go to state 48
    list_stmt        go to state 50
    logical_exp      go to state 107
    condition        go to state 56
    expression_stmt  go to state 57
    term             go to state 52
    factor           go to state 53
    power            go to state 54


State 86

   60 comp_operator: T_EQUAL . T_EQUAL

    T_EQUAL  shift, and go to state 108


State 87

   58 comp_operator: T_LESSER .
   62              | T_LESSER . T_EQUAL

    T_EQUAL  shift, and go to state 109

    $default  reduce using rule 58 (comp_operator)


State 88

   59 comp_operator: T_GREATER .
   61              | T_GREATER . T_EQUAL

    T_EQUAL  shift, and go to state 110

    $default  reduce using rule 59 (comp_operator)


State 89

   63 comp_operator: T_NO . T_EQUAL

    T_EQUAL  shift, and go to state 111


State 90

   56 condition: expression_stmt comp_operator . condition

    T_BOOLEAN     shift, and go to state 41
    T_INTEGER     shift, and go to state 42
    T_IDENTIFIER  shift, and go to state 43
    T_STRING      shift, and go to state 44
    T_FLOAT       shift, and go to state 45
    T_OPENP       shift, and go to state 46
    T_OPENS       shift, and go to state 47

    literal          go to state 48
    list_stmt        go to state 50
    condition        go to state 112
    expression_stmt  go to state 57
    term             go to state 52
    factor           go to state 53
    power            go to state 54


State 91

   77 for_stmt: T_FOR T_IDENTIFIER T_IN . range_stmt T_COLON

    T_STRING  shift, and go to state 113
    T_RANGE   shift, and go to state 114

    range_stmt  go to state 115


State 92

   19 indent: T_INDENT .

    $default  reduce using rule 19 (indent)


State 93

   12 all_stmt: $@1 compound_stmt line suite . $@2 all_stmt

    $default  reduce using rule 11 ($@2)

    $@2  go to state 116


State 94

   17 suite: line . suite

    T_INDENT   shift, and go to state 92
    T_NEWLINE  shift, and go to state 35

    suite   go to state 117
    line    go to state 94
    indent  go to state 95


State 95

   16 suite: indent . all_stmt dedent

    T_IDENTIFIER  shift, and go to state 1
    T_BREAK       shift, and go to state 2
    T_CONTINUE    shift, and go to state 3
    T_IMPORT      shift, and go to state 4
    T_PRINT       shift, and go to state 5

    T_NEWLINE  reduce using rule 27 (simple_stmt)
    T_DEDENT   reduce using rule 13 (all_stmt)
    $default   reduce using rule 10 ($@1)

    all_stmt             go to state 118
    $@1                  go to state 8
    simple_stmt          go to state 9
    print_stmt           go to state 10
    assignment_stmt      go to state 11
    break_stmt           go to state 12
    continue_stmt        go to state 13
    import_stmt          go to state 14
    aug_assignment_stmt  go to state 15


State 96

    7 indexes: T_OPENS T_INTEGER T_CLOSES indexes .

    $default  reduce using rule 7 (indexes)


State 97

   73 power: T_OPENP expression_stmt T_CLOSEP .

    $default  reduce using rule 73 (power)


State 98

   32 list_stmt: T_OPENS item T_CLOSES .

    $default  reduce using rule 32 (list_stmt)


State 99

   34 item: list_literal T_COMMA . item

    T_INTEGER  shift, and go to state 67
    T_FLOAT    shift, and go to state 68
    T_OPENS    shift, and go to state 47

    list_stmt     go to state 70
    item          go to state 119
    list_literal  go to state 72


State 100

   64 expression_stmt: expression_stmt T_PLUS term .
   67 term: term . T_STAR factor
   68     | term . T_DIVIDE factor
   69     | term . T_MOD factor

    T_STAR    shift, and go to state 77
    T_DIVIDE  shift, and go to state 78
    T_MOD     shift, and go to state 79

    $default  reduce using rule 64 (expression_stmt)


State 101

   65 expression_stmt: expression_stmt T_MINUS term .
   67 term: term . T_STAR factor
   68     | term . T_DIVIDE factor
   69     | term . T_MOD factor

    T_STAR    shift, and go to state 77
    T_DIVIDE  shift, and go to state 78
    T_MOD     shift, and go to state 79

    $default  reduce using rule 65 (expression_stmt)


State 102

   29 print_list: expression_stmt T_COMMA print_list .

    $default  reduce using rule 29 (print_list)


State 103

   67 term: term T_STAR factor .

    $default  reduce using rule 67 (term)


State 104

   68 term: term T_DIVIDE factor .

    $default  reduce using rule 68 (term)


State 105

   69 term: term T_MOD factor .

    $default  reduce using rule 69 (term)


State 106

   71 factor: power T_POWER factor .

    $default  reduce using rule 71 (factor)


State 107

   45 logical_exp: condition rel_op logical_exp .

    $default  reduce using rule 45 (logical_exp)


State 108

   60 comp_operator: T_EQUAL T_EQUAL .

    $default  reduce using rule 60 (comp_operator)


State 109

   62 comp_operator: T_LESSER T_EQUAL .

    $default  reduce using rule 62 (comp_operator)


State 110

   61 comp_operator: T_GREATER T_EQUAL .

    $default  reduce using rule 61 (comp_operator)


State 111

   63 comp_operator: T_NO T_EQUAL .

    $default  reduce using rule 63 (comp_operator)


State 112

   56 condition: expression_stmt comp_operator condition .

    $default  reduce using rule 56 (condition)


State 113

   80 range_stmt: T_STRING .

    $default  reduce using rule 80 (range_stmt)


State 114

   78 range_stmt: T_RANGE . T_OPENP T_INTEGER T_COMMA T_INTEGER T_CLOSEP
   79           | T_RANGE . T_OPENP T_INTEGER T_COMMA T_INTEGER T_COMMA T_INTEGER T_CLOSEP

    T_OPENP  shift, and go to state 120


State 115

   77 for_stmt: T_FOR T_IDENTIFIER T_IN range_stmt . T_COLON

    T_COLON  shift, and go to state 121


State 116

   12 all_stmt: $@1 compound_stmt line suite $@2 . all_stmt

    T_IDENTIFIER  shift, and go to state 1
    T_BREAK       shift, and go to state 2
    T_CONTINUE    shift, and go to state 3
    T_IMPORT      shift, and go to state 4
    T_PRINT       shift, and go to state 5

    T_NEWLINE  reduce using rule 27 (simple_stmt)
    T_DEDENT   reduce using rule 13 (all_stmt)
    T_EOF      reduce using rule 13 (all_stmt)
    $default   reduce using rule 10 ($@1)

    all_stmt             go to state 122
    $@1                  go to state 8
    simple_stmt          go to state 9
    print_stmt           go to state 10
    assignment_stmt      go to state 11
    break_stmt           go to state 12
    continue_stmt        go to state 13
    import_stmt          go to state 14
    aug_assignment_stmt  go to state 15


State 117

   17 suite: line suite .

    $default  reduce using rule 17 (suite)


State 118

   16 suite: indent all_stmt . dedent

    T_DEDENT  shift, and go to state 123

    dedent  go to state 124


State 119

   34 item: list_literal T_COMMA item .

    $default  reduce using rule 34 (item)


State 120

   78 range_stmt: T_RANGE T_OPENP . T_INTEGER T_COMMA T_INTEGER T_CLOSEP
   79           | T_RANGE T_OPENP . T_INTEGER T_COMMA T_INTEGER T_COMMA T_INTEGER T_CLOSEP

    T_INTEGER  shift, and go to state 125


State 121

   77 for_stmt: T_FOR T_IDENTIFIER T_IN range_stmt T_COLON .

    $default  reduce using rule 77 (for_stmt)


State 122

   12 all_stmt: $@1 compound_stmt line suite $@2 all_stmt .

    $default  reduce using rule 12 (all_stmt)


State 123

   20 dedent: T_DEDENT .

    $default  reduce using rule 20 (dedent)


State 124

   16 suite: indent all_stmt dedent .

    $default  reduce using rule 16 (suite)


State 125

   78 range_stmt: T_RANGE T_OPENP T_INTEGER . T_COMMA T_INTEGER T_CLOSEP
   79           | T_RANGE T_OPENP T_INTEGER . T_COMMA T_INTEGER T_COMMA T_INTEGER T_CLOSEP

    T_COMMA  shift, and go to state 126


State 126

   78 range_stmt: T_RANGE T_OPENP T_INTEGER T_COMMA . T_INTEGER T_CLOSEP
   79           | T_RANGE T_OPENP T_INTEGER T_COMMA . T_INTEGER T_COMMA T_INTEGER T_CLOSEP

    T_INTEGER  shift, and go to state 127


State 127

   78 range_stmt: T_RANGE T_OPENP T_INTEGER T_COMMA T_INTEGER . T_CLOSEP
   79           | T_RANGE T_OPENP T_INTEGER T_COMMA T_INTEGER . T_COMMA T_INTEGER T_CLOSEP

    T_CLOSEP  shift, and go to state 128
    T_COMMA   shift, and go to state 129


State 128

   78 range_stmt: T_RANGE T_OPENP T_INTEGER T_COMMA T_INTEGER T_CLOSEP .

    $default  reduce using rule 78 (range_stmt)


State 129

   79 range_stmt: T_RANGE T_OPENP T_INTEGER T_COMMA T_INTEGER T_COMMA . T_INTEGER T_CLOSEP

    T_INTEGER  shift, and go to state 130


State 130

   79 range_stmt: T_RANGE T_OPENP T_INTEGER T_COMMA T_INTEGER T_COMMA T_INTEGER . T_CLOSEP

    T_CLOSEP  shift, and go to state 131


State 131

   79 range_stmt: T_RANGE T_OPENP T_INTEGER T_COMMA T_INTEGER T_COMMA T_INTEGER T_CLOSEP .

    $default  reduce using rule 79 (range_stmt)
